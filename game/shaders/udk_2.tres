[gd_resource type="MaterialShader" format=1]

[resource]

_code = { "fragment":"//Obtaining world space normal\nvec4 invcamx = INV_CAMERA_MATRIX.x;\nvec4 invcamy = INV_CAMERA_MATRIX.y;\nvec4 invcamz = INV_CAMERA_MATRIX.z;\nvec4 invcamw = INV_CAMERA_MATRIX.w;\n\nmat3 invcam = mat3(invcamx.xyz, invcamy.xyz, invcamz.xyz);\n\nvec3 world_normal = NORMAL * invcam;\nvec3 world_pos = (VERTEX - invcamw.xyz) * invcam;\n\nNORMAL = world_normal;\n", "fragment_ofs":0, "light":"//world space top light\n//LIGHT = vec3(dot(NORMAL, vec3(0,1,0)));\n\n//World space top light with color\n//LIGHT = vec3(sin(TIME), cos(TIME), dot(NORMAL, vec3(0,sin(TIME),1)));\n\n//Moving the light\n//LIGHT = vec3(dot(NORMAL, vec3(cos(TIME),cos(TIME),cos(TIME))));\n\n//Light normal\n//LIGHT = vec3(dot(NORMAL, LIGHT_DIR));\n//DIFFUSE = vec3(100, 100, 10);\n//LIGHT_DIR = vec3(10, 10,0 );\nLIGHT =  vec3(dot(vec3(0,1,0), LIGHT_DIR));\n", "light_ofs":0, "vertex":"", "vertex_ofs":0 }

